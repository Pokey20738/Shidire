const CACHE_NAME = 'family-tree-cache-v1'; // Версия кэша, меняй при каждом обновлении
    const urlsToCache = [
      'index.html',
      'style.css',
      'script.js',
      'rod.png',
      // Добавь сюда все свои дополнительные HTML-файлы и папки, если они есть
      'zadam.html', // Пример
      'zeva.html',  // Пример
      // 'icons/icon-192x192.png', // Иконки тоже кэшируем
      // 'icons/icon-512x512.png'
      // И так далее для всех ресурсов, которые должны быть доступны оффлайн!
    ];

    self.addEventListener('install', (event) => {
      event.waitUntil(
        caches.open(CACHE_NAME)
          .then((cache) => {
            console.log('Opened cache');
            return cache.addAll(urlsToCache);
          })
      );
    });

    self.addEventListener('fetch', (event) => {
      event.respondWith(
        caches.match(event.request)
          .then((response) => {
            if (response) {
              return response; // Отдаем из кэша
            }
            return fetch(event.request); // Иначе - идем в сеть
          })
      );
    });

    self.addEventListener('activate', (event) => {
      event.waitUntil(
        caches.keys().then((cacheNames) => {
          return Promise.all(
            cacheNames.map((cacheName) => {
              if (cacheName !== CACHE_NAME) {
                console.log('Deleting old cache:', cacheName);
                return caches.delete(cacheName);
              }
            })
          );
        })
      );
    });
